version: '3.8'

services:

  # Postgres service
  postgresdb:
    container_name: postgres
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: smartera-management-system
    volumes:
      - postgres-data:/var/lib/postgresql/data


  # Backend services (customer-service and order-service)
  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    image: customer-service
    container_name: customer-service
    depends_on:
      - postgresdb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/smartera-management-system
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8080:8080"


  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    image: order-service
    container_name: order-service
    depends_on:
      - postgresdb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/smartera-management-system
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8081:8081"

  # Angular application


  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"


  ui:
    build:
      context: ./ui
      dockerfile: ./Dockerfile
    image: smartera-management-system-ui
    container_name: smartera-management-system-ui
    ports:
      - "4200:4200"
    volumes:
      - ./ui:/app
    depends_on:
      - order-service
      - customer-service

# Volume definition for persistent data
volumes:
  postgres-data:
    driver: local
    name: postgres

