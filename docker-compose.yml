version: '3.8'

services:

  # MySQL service
  postgresqldb:
    image: postgres:15.1
    container_name: postgresdb
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: smartera-management-system
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - my-network

  # Backend services (customer-service and order-service)
#  customer-service:
#    build:
#      context: ./customer-service
#      dockerfile: Dockerfile
#    image: customer-service
#    container_name: customer-service
#    depends_on:
#      - postgresqldb
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb:5433/smartera-management-system
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=postgres
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#    ports:
#      - "8080:8080"
#    networks:
#      - my-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    image: order-service
    container_name: order-service
    depends_on:
      - postgresqldb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb:5433/smartera-management-system
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8081:8081"
    networks:
      - my-network

  # Angular application

  ui:
    build:
      context: ./ui
      dockerfile: ./Dockerfile
    image: smartera-management-system-ui
    container_name: smartera-management-system-ui
    ports:
      - "4200:4200"
    volumes:
      - ./ui:/app
    depends_on:
      - order-service
#      - customer-service
    networks:
      - my-network

# Volume definition for persistent data
volumes:
  postgres-data:
    driver: local
    name: postgres-db


networks:
  my-network:
    driver: bridge
    name: internal-network
